{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "ArtistStage"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "ArtistDim"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "joinArtistStagetoDim"
				},
				{
					"name": "surrogateKey1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ARTISTID as decimal(38,0),",
				"          NAME as string,",
				"          CREATED_BY as string,",
				"          CREATED_DT as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> ArtistStage",
				"source(output(",
				"          ARTIST_KEY as decimal(10,0),",
				"          ARTIST_ID as decimal(10,0),",
				"          ARTIST_NAME as string,",
				"          SOURCE_ID as string,",
				"          DATE_TO_WAREHOUSE as timestamp,",
				"          ROW_NUM as decimal(10,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> ArtistDim",
				"ArtistStage, ArtistDim join(ARTISTID == ARTIST_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinArtistStagetoDim",
				"joinArtistStagetoDim keyGenerate(output(Row_Num as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          ARTIST_ID = ARTISTID,",
				"          ARTIST_NAME = NAME,",
				"          DATE_TO_WAREHOUSE = CREATED_DT,",
				"          ARTIST_KEY = surrogateKey1@Row_Num",
				"     )) ~> sink1"
			]
		}
	}
}