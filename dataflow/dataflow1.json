{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "CustomerStage"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "CustomerDim"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "CustStagejoinDim"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "surrogatesource"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CUSTOMERID as decimal(38,0),",
				"          FIRSTNAME as string,",
				"          LASTNAME as string,",
				"          COMPANY as string,",
				"          ADDRESS as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          COUNTRY as string,",
				"          POSTALCODE as string,",
				"          PHONE as string,",
				"          FAX as string,",
				"          EMAIL as string,",
				"          SUPPORTREPID as decimal(38,0),",
				"          CREATED_BY as string,",
				"          CREATED_DT as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> CustomerStage",
				"source(output(",
				"          CUSTOMER_KEY as decimal(10,0),",
				"          CUSTOMER_ID as decimal(10,0),",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          COMPANY_NAME as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          COUNTRY as string,",
				"          ZIP_CODE as string,",
				"          EMPLOYEE_ID as decimal(10,0),",
				"          IS_ACTIVE as string,",
				"          SOURCE_ID as string,",
				"          DATE_TO_WAREHOUSE as timestamp,",
				"          ROW_HASH as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> CustomerDim",
				"CustomerStage, CustomerDim join(CUSTOMERID == CUSTOMER_KEY,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> CustStagejoinDim",
				"CustStagejoinDim derive(source_hash_key = md5(concat(\r",
				"        toString(CUSTOMERID), '|',\r",
				"        coalesce(FIRSTNAME, ''), '|',\r",
				"        coalesce(LASTNAME, ''), '|',\r",
				"        coalesce(COMPANY, ''), '|',\r",
				"        coalesce(ADDRESS, ''), '|',\r",
				"        coalesce(POSTALCODE, ''), '|',\r",
				"        coalesce(PHONE, ''), '|',\r",
				"        coalesce(EMAIL, '')\r",
				"    ))) ~> derivedColumn1",
				"surrogatesource alterRow(insertIf(isNull(ROW_HASH)),",
				"     updateIf(!isNull(CUSTOMERID)&&ROW_HASH!=source_hash_key)) ~> alterRow1",
				"select1 keyGenerate(output(Row_Num as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogatesource",
				"derivedColumn1 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          CUSTOMER_ID = CUSTOMERID,",
				"          FIRST_NAME = FIRSTNAME,",
				"          LAST_NAME = LASTNAME,",
				"          COMPANY_NAME = COMPANY,",
				"          CITY,",
				"          STATE,",
				"          COUNTRY,",
				"          EMPLOYEE_ID = SUPPORTREPID,",
				"          CUSTOMER_KEY = Row_Num,",
				"          DATE_TO_WAREHOUSE = CREATED_DT,",
				"          ROW_HASH = source_hash_key",
				"     )) ~> sink1"
			]
		}
	}
}